#
# 01_basic_requests.yml
#
# This file demonstrates the basic HTTP request functionality in SpecForge.
#
# REQUEST OVERVIEW:
# ------------------
# SpecForge supports all standard HTTP methods and provides a clean syntax
# for working with path parameters, query parameters, and request bodies.
#
# SUPPORTED HTTP METHODS:
# - GET (default when no method specified)
# - POST
# - PUT
# - PATCH
# - DELETE
#
# PATH PARAMETERS:
# Path parameters can be defined using either {placeholder} or :placeholder syntax
# and are populated from the query section.
#

# Basic GET with no parameters
get_status:
  path: /status
  expectations:
  - expect:
      status: 200
      json:
        status: "ok"
        version: kind_of.string

# Basic POST to create a resource
create_user:
  path: /users
  method: post
  variables:
    random_email: faker.internet.email
  body:
    name: "Basic Test User"
    email: variables.random_email
    password: "password12345"
  expectations:
  - expect:
      status: 201
      json:
        user:
          name: "Basic Test User"
          email: variables.random_email
          id: kind_of.integer

# GET with path parameter
get_user:
  path: /users/{id}
  variables:
    user: factories.user # This creates a user with a random email
  query:
    id: variables.user.id
  expectations:
  - expect:
      status: 200
      json:
        user:
          id: variables.user.id
          name: variables.user.name

# PATCH request
update_user:
  path: /users/{id}
  method: patch
  variables:
    user: factories.user
  query:
    id: variables.user.id
  body:
    name: "Updated Basic User"
  expectations:
  - expect:
      status: 200
      json:
        user:
          name: "Updated Basic User"

# DELETE request
delete_user:
  path: /users/{id}
  method: delete
  variables:
    user: factories.user
  query:
    id: variables.user.id
  expectations:
  - expect:
      status: 204
